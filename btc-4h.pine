//@version=5
strategy("BTC - 4H", overlay = true, initial_capital = 1000, currency = 'USD', default_qty_type = strategy.percent_of_equity, default_qty_value = 100)
// ZONES
int bull_level = 75
int bear_level = 23
// RSI
series float rsi = ta.rsi(close, 7)
// STOCH
series float stoch = ta.sma(ta.stoch(close, high, low, 13), 3)
// WAVES
series float waves_high_low_close_3 = hlc3 
series float waves_ema = ta.ema(waves_high_low_close_3, 13)
series float waves_dma = ta.ema(math.abs(waves_high_low_close_3 - waves_ema), 13)
float ci = (waves_high_low_close_3 - waves_ema) / (0.015 * waves_dma)
series float waves = ta.ema(ci / 1.75, 21)  + 45
// DI
float di_range = math.max(math.max(high-low, math.abs(high-nz(close[1]))), math.abs(low-nz(close[1])))
float di_plus_range = high-nz(high[1]) > nz(low[1])-low ? math.max(high-nz(high[1]), 0): 0
float di_minus_range = nz(low[1])-low > high-nz(high[1]) ? math.max(nz(low[1])-low, 0): 0
float smoothed_di_range = 0.0
smoothed_di_range := nz(smoothed_di_range[1]) - (nz(smoothed_di_range[1]) / 7) + di_range
float smoothed_di_plus = 0.0
smoothed_di_plus := nz(smoothed_di_plus[1]) - (nz(smoothed_di_plus[1]) / 7) + di_plus_range
float smoothed_di_minus = 0.0
smoothed_di_minus := nz(smoothed_di_minus[1]) - (nz(smoothed_di_minus[1]) / 7) + di_minus_range
float di_plus = smoothed_di_plus / smoothed_di_range * 144
float di_minus = -(smoothed_di_minus / smoothed_di_range * 144) + 90
float di = di_plus + ((di_minus - di_plus) / 2) * 1.1
// PMARP
var pmar_array = array.new<float>(377, na)
f_pmar (float _price, simple int _len) =>
    float ma = ta.ema (_price, _len) 
    float pmar = _price / ma 
f_pmarp (simple int _pmarp_len, float _pmar) => 
    array.unshift (pmar_array, _pmar)
    if array.size (pmar_array) > _pmarp_len + 1
        array.pop (pmar_array)
    float percentile = array.percentrank (pmar_array, 0)
float pmar = f_pmar (close, 20)
float pmarp = f_pmarp (377, pmar)
// VOLUME
series float typical = hlc3
float inter = math.log(typical) - math.log(typical[1])
series float vinter = ta.stdev(inter, 21)
float cutoff = 0.21 * vinter * close
series float vave = ta.sma(volume, 144)[1]
float vmax = vave * 2.1
float vc = volume < vmax ?  volume : vmax
float mf = typical - typical[1]
float vcp = mf > cutoff ? vc : (mf < -cutoff ? -vc : 0)
float vfi = (math.sum(vcp , 144) / vave) + 55
// BBWP
f_bbwp (_price, _bbwLen, _bbwpLen) =>
    float _basis = ta.ema (_price, _bbwLen)
    float _dev = ta.stdev (_price, _bbwLen)
    _bbw = (_basis + _dev - (_basis - _dev)) / _basis
    _bbwSum = 0.0
    _len = bar_index < _bbwpLen ? bar_index : _bbwpLen
    for _i = 1 to _len by 1
        _bbwSum += (_bbw[_i] > _bbw ? 0 : 1)
        _bbwSum
    _return = bar_index >= _bbwLen ? (_bbwSum / _len) * 100 : na
    _return
bbwp = f_bbwp (close, 22, 233)
bbwp_ma = ta.ema (bbwp, 5)
// MOMENTUM
float momentum = (((stoch + rsi + waves + di + pmarp + vfi) / 6) * 1.1) -5
series float momentum_ma = ta.ema((momentum * 1.1) - 5 , 5)
// FIB
dist = ta.highest(high, 55) -  ta.lowest(low, 55)
mid = ta.highest(high, 55) - (dist / 2)
color = color.new(color.white, 0)
mid_ma = ta.ema(mid, 155)
bull_trend = (mid_ma > mid_ma[1] and close > mid_ma)
bear_trend = mid_ma < mid_ma[1] and close < mid_ma
if close > mid_ma or close < mid_ma
    color:= color.new(color.white, 0)
if bull_trend
    color:= color.new(color.green, 0)
if bear_trend
    color:= color.new(color.red, 0)
plot(mid_ma, color=color)
// STRATEGY
mom_rev_up = momentum > momentum[1] and momentum[2] > momentum[1]
mom_rev_down = momentum < momentum[1] and momentum[1] < momentum[2]
long = mom_rev_up and momentum[1] < bear_level
long_BBWP = bbwp > 13 and bbwp_ma > bbwp_ma[1] and bbwp_ma[2] < bear_level
long_close = momentum_ma[2] > bull_level and momentum_ma[1] > bear_level and momentum_ma < bull_level
short = mom_rev_down and momentum[1] > bull_level
short_BBWP = bbwp > 13 and bbwp_ma > bbwp_ma[1] and bbwp_ma[2] < bear_level
short_close = momentum_ma[2] < bear_level  and momentum_ma[1] < bear_level and momentum_ma > bear_level
if (long or long_BBWP) and bull_trend
    strategy.entry("LONG", strategy.long, qty = strategy.equity * 1 / close)
if long_close or bear_trend 
    strategy.close("LONG")
if (short_BBWP) and bear_trend
    strategy.entry("SHORT", strategy.short, qty = strategy.equity * 1 / close)
if short_close or bull_trend
    strategy.close("SHORT")
